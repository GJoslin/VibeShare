trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  nodeVersion: '22.x'
  buildDir: '$(Build.ArtifactStagingDirectory)/wwwroot'

steps:

# 1️⃣ Install Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '$(nodeVersion)'
  displayName: 'Install Node.js'

# 2️⃣ Install dependencies
- script: npm install
  displayName: 'Install NPM dependencies'

# 3️⃣ Build Next.js standalone app
- script: npm run build
  displayName: 'Build Next.js standalone app'

# 4️⃣ Copy all standalone files to buildDir (flatten)
- task: CopyFiles@2
  inputs:
    SourceFolder: '.next/standalone'
    Contents: '**/*'
    TargetFolder: '$(buildDir)'
  displayName: 'Copy standalone app files'

# 5️⃣ Copy .next/static to buildDir/.next/static
- task: CopyFiles@2
  inputs:
    SourceFolder: '.next/static'
    Contents: '**/*'
    TargetFolder: '$(buildDir)/.next/static'
  displayName: 'Copy static assets'

# 6️⃣ Verify required files exist
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $required = @("server.js","package.json",".next/static")
      foreach ($f in $required) {
          if (-not (Test-Path "$(buildDir)\$f")) {
              Write-Error "Missing required file: $f"
              exit 1
          }
      }
  displayName: 'Verify required files exist'

# 7️⃣ Generate valid web.config
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $webConfigPath = "$(buildDir)\web.config"
      $lines = @(
        '<?xml version="1.0" encoding="utf-8"?>',
        '<configuration>',
        '  <system.webServer>',
        '    <handlers>',
        '      <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>',
        '    </handlers>',
        '    <rewrite>',
        '      <rules>',
        '        <rule name="NodeApp" stopProcessing="true">',
        '          <match url=".*" />',
        '          <action type="Rewrite" url="server.js" />',
        '        </rule>',
        '      </rules>',
        '    </rewrite>',
        '  </system.webServer>',
        '</configuration>'
      )
      $lines | Out-File -FilePath $webConfigPath -Encoding UTF8 -Force
  displayName: 'Generate web.config'

# 8️⃣ Publish artifact
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(buildDir)'
    ArtifactName: 'standalone'
    publishLocation: 'Container'
  displayName: 'Publish build artifact'

# 9️⃣ Deploy to Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'VShareAppPCon'  # Replace this
    appName: 'VibeShare'                     # Replace this
    package: '$(buildDir)'
    appSettings: |
      -WEBSITE_NODE_DEFAULT_VERSION=22.18.0
  displayName: 'Deploy to Azure Web App'
